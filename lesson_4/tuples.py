# Кортежі

# Створення кортежу:
# Кортеж в Python - це колекція об'єктів, які мають фіксовану послідовність і не можуть бути змінені
# після створення. Кортежі створюються, як і списки, за допомогою круглих дужок () або tuple(),
# і об'єкти в кортежі розділяються комами.

# my_tuple = (1, 2, 3, 4, 5) # Створення кортежу чисел
# fruits_tuple = ("apple", "banana", "cherry") # Створення кортежу рядків
# mixed_tuple = (1, "apple", True, 3.14) # Створення кортежу з різними типами даних
# single_item_tuple = (42,) # Створення кортежу з одним елементом

# Індексація кортежу:
# Елементи кортежу індексуються так само, як і елементи списку, починаючи з 0. Щоб отримати доступ до елемента за його індексом,
# використовуйте квадратні дужки і індекс:
# rst_element = my_tuple[0] # Отримання першого елемента кортежу
# second_element = my_tuple[1] # Отримання другого елемента кортежу
a = (1, 2, 3, 4, 5)
print(a[0], a[1], a[2]) # 1 2 3

# Зрізи кортежів (slicing):
# Зрізи кортежів працюють аналогічно до списків. Ви можете отримати підписок кортежу, використовуючи синтаксис my_tuple[start:stop:step].
# subtuple = my_tuple[1:4] # Отримання підсписку з другого до четвертого елемента
# every_other = my_tuple[::2] # Отримання кожного другого елемента

print(a[:2], a[-2:]) #(1, 2) (4, 5) - перши 2 і останні 2 елементи

# Кортежі є незмінними:
# Одна з основних різниць між кортежами і списками полягає в тому, що кортежі незмінні. Це означає, що після створення кортежу ви не можете
# змінити його елементи. Наприклад, такий код призведе до помилки:
# my_tuple[0] = 10 # Помилка! Кортеж незмінний.



# Методи кортежу
# Кортежі не мають багатьох методів порівняно із списками, оскільки вони
# незмінні. Однак вони підтримують тільки два методи: .count() і .index():
# .count(item): Повертає кількість входжень item у кортеж.
a = (1, 2, 3, 4, 5, 5, 4)
print(a.count(5), a.count(4)) # 2 2 - у кортежі 2 5ки і 2 4ки

# .index(item): Повертає індекс першого входження item у кортеж.
print(a.index(4)) # 3

# count = my_tuple.count(3) # Підрахунок кількості трійок у кортежі
# index = my_tuple.index(4) # Знаходження індексу першої четвірки
